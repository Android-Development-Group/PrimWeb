apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'

android {
    compileSdkVersion 27
    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 26
        versionCode 1
        versionName "1.1"
        ndk {
            abiFilters 'armeabi'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.zhy:mpermission-api:1.0.0'
    annotationProcessor 'com.zhy:mpermission-compiler:1.0.0'
    api files('libs/tbs_sdk_thirdapp_v3.6.0.1310.jar')
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

////添加
publish {
    userOrg = 'jakeprim'//bintray.com用户名
    groupId = 'com.prim.lib'//jcenter上的路径
    artifactId = 'prim-web'//项目名称
    publishVersion = '1.0.2'//版本号
    desc = 'This is an android web'
    website = 'https://github.com/JakePrim/PrimWeb'
}


task javadoc(type: Javadoc) {
    options.encoding = "utf-8"
    source = android.sourceSets.main.java.srcDirs
    classpath += files(android.bootClasspath)

    options {
        //links "http://docs.oracle.com/javase/7/docs/api/"
        linksOffline "https://developer.android.com/reference","${android.sdkDirectory}/docs/reference"
        encoding = "UTF-8"
    }
    exclude '**/BuildConfig.java'
    exclude '**/R.java'

    android.libraryVariants.all { variant ->
        variant.javaCompileProvider.configure{
            javadoc.classpath += files(it.classpath.files)
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
